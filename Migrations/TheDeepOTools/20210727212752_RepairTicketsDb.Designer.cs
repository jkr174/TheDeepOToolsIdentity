// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheDeepOTools.Data;

namespace TheDeepOTools.Migrations.TheDeepOTools
{
    [DbContext(typeof(TheDeepOToolsContext))]
    [Migration("20210727212752_RepairTicketsDb")]
    partial class RepairTicketsDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TheDeepOTools.Models.Inventory", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("ItemIdentifier")
                        .IsRequired();

                    b.Property<string>("ItemName")
                        .IsRequired();

                    b.Property<int>("OnHandQty");

                    b.Property<int>("OutQty");

                    b.Property<decimal>("Price");

                    b.Property<string>("Subcategory");

                    b.Property<int>("TotalQty");

                    b.HasKey("ItemID");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("TheDeepOTools.Models.RepairTicket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Owner");

                    b.Property<string>("OwnerId");

                    b.Property<string>("TicketState");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("RepairTicket");
                });

            modelBuilder.Entity("TheDeepOTools.Models.RepairTicketMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Message");

                    b.Property<string>("Notes");

                    b.Property<string>("Owner");

                    b.Property<string>("OwnerId");

                    b.Property<Guid>("TicketId");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("RepairTicketMessage");
                });

            modelBuilder.Entity("TheDeepOTools.Models.RepairTicketMessage", b =>
                {
                    b.HasOne("TheDeepOTools.Models.RepairTicket", "Ticket")
                        .WithMany("Messages")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
